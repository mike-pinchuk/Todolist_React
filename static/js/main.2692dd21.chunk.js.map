{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","type","className","onChange","e","target","value","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","el","filter","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2692dd21.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      {\n        text: inputText,\n        completed: false,\n        id: Math.random() * 1000,\n      },\n    ]);\n    setInputText(\"\");\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        className=\"todo-input\"\n        onChange={inputTextHandler}\n        value={inputText}\n      />\n      <button className=\"todo-button\" type=\"submit\" onClick={submitTodoHandler}>\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n  };\n\n  const completedHandler = () => {\n    setTodos(\n      todos.map((el) => {\n        if (el.id === todo.id) {\n          return {\n            ...el,\n            completed: !el.completed,\n          };\n        }\n        return el;\n      })\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\n      <button className=\"complete-btn\" onClick={completedHandler}>\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button className=\"trash-btn\" onClick={deleteHandler}>\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => {\n          return (\n            <Todo\n              text={todo.text}\n              key={todo.id}\n              todos={todos}\n              setTodos={setTodos}\n              todo={todo}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((el) => el.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((el) => el.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    let todoLocal = JSON.parse(localStorage.getItem('todos'))\n    setTodos(todoLocal);\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Mike's Todo List</h1>\n      </header>\n      <Form\n        setInputText={setInputText}\n        setTodos={setTodos}\n        todos={todos}\n        inputText={inputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}